AC_INIT(gbdd/gbdd.h)
AM_CONFIG_HEADER(gbdd/config.h)

GBDD_VERSION=0.10

VERSION=$GBDD_VERSION
PACKAGE=gbdd

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AM_PROG_LIBTOOL
AC_ISC_POSIX
AC_STDC_HEADERS
AC_ARG_PROGRAM	
AM_MAINTAINER_MODE

AC_LANG_CPLUSPLUS

AC_MSG_CHECKING(Support for BuDDy package)
AC_ARG_WITH(buddy,
[  --with-buddy[=PATH]     Compile with BuDDy support.],
[ case "$withval" in
  no)
	AC_MSG_RESULT(no)

	INCLUDEDIR_BUDDY=""
	CFLAGS_BUDDY=""
	;;
  *)
	AC_MSG_RESULT(yes)
	if test "x$withval" = "xyes"; then
		LIBS_BUDDY="-lbdd"
		INCLUDEDIR_BUDDY="$prefix/include"
	else
		CFLAGS_BUDDY="-I$withval/include"
		INCLUDEDIR_BUDDY="$withval/include"
		LIBS_BUDDY="-L$withval/lib -lbdd"
	fi
	LIBS="$LIBS $LIBS_BUDDY"
	CFLAGS="$CFLAGS $CFLAGS_BUDDY"
	CXXFLAGS="$CXXFLAGS $CFLAGS_BUDDY"

	AC_TRY_LINK([ #include <bdd.h> ],
        	    [ bdd_init(1000, 1000); ],
		    [],
		    [ AC_MSG_ERROR(Could not find the BuDDy library.  You must first install BuDDy.) ])

	AC_DEFINE(GBDD_WITH_BUDDY)
	;;
  esac ],
	AC_MSG_RESULT(no)

	INCLUDEDIR_BUDDY=""
	CFLAGS_BUDDY=""
)
AC_SUBST(INCLUDEDIR_BUDDY)
AC_SUBST(CFLAGS_BUDDY)
AC_SUBST(LIBS_BUDDY)

AC_MSG_CHECKING(whether to support CUDD)
AC_ARG_WITH(cudd,
[  --with-cudd[=PATH]     Compile with CUDD support.],
[ case "$withval" in
  no)
	AC_MSG_RESULT(no)

	INCLUDEDIR_CUDD=""
	CFLAGS_CUDD=""
	;;
  *)
	AC_MSG_RESULT(yes)
	if test "x$withval" = "xyes"; then
		LIBS_CUDD="-L$prefix/lib/cudd -lcudd -lmtr -lst -lcuddutil -lepd"
		CFLAGS_CUDD="-I$prefix/include/cudd"
		INCLUDEDIR_CUDD="$prefix/include/cudd"
	else
		CFLAGS_CUDD="-I$withval/include/cudd"
		INCLUDEDIR_CUDD="$withval/include/cudd"
		LIBS_CUDD="-L$withval/lib/cudd -lcudd -lmtr -lst -lcuddutil -lepd"
	fi
	LIBS="$LIBS $LIBS_CUDD"
	CFLAGS="$CFLAGS $CFLAGS_CUDD"
	CXXFLAGS="$CXXFLAGS $CFLAGS_CUDD"

	AC_TRY_LINK([ #include<stdio.h>
                      #include <cudd.h> ],
        	    [ Cudd_Init(0, 0, CUDD_UNIQUE_SLOTS, CUDD_CACHE_SLOTS, 0); ],
		    [],
		    [ AC_MSG_ERROR(Could not find the CUDD library.  You must first install CUDD.) ])

	AC_DEFINE(GBDD_WITH_CUDD)
	;;
  esac ],
	AC_MSG_RESULT(no)

	CFLAGS_CUDD=""
)
AC_SUBST(CFLAGS_CUDD)
AC_SUBST(LIBS_CUDD)

AC_ARG_ENABLE(doxygen, 
AC_HELP_STRING([--enable-doxygen=DOXYGEN], [use doxygen (default is yes)]),
[case "${enableval}" in
  no)  DOXYGEN="";;
  *) 
	if test -n"$enableval"; then
		DOXYGEN=${enableval}
	else
		DOXYGEN=doxygen
	fi;
esac],
[
   DOXYGEN="doxygen"
])
if test "x$DOXYGEN" != "x"; then
AC_CHECK_PROG(DOXYGEN, $DOXYGEN, $DOXYGEN, "")
fi;
AM_CONDITIONAL(HAS_DOXYGEN, test "x$DOXYGEN" != "x")
AC_OUTPUT([
gbdd.spec
Makefile
gbdd/Makefile
gbdd/buddy.h
gbdd-config
Doxyfile
])
